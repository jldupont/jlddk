#!/usr/bin/env python
"""
    jldbolus - move directories which are 'done processing'

    Regular check in 'dir_src' for subdirectories containing an equal amount of "files" and "files.done"
    => move 'done' processing subdirectories to 'dir_dst', transiting through 'dir_tmp' for removing '.done' files

    @author: Jean-Lou Dupont
"""
__version__="0.2"
import os, sys, argparse
op=os.path

try:
    if os.environ.get("DEVMODE", False):
        raise
    
    import jlddk #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk #@UnusedImport

########################################################################

DESC="""Move directories when they are 'done processing' - v%s
2 Modes of operation:
 Mode 'done files': wait for all the files in a directory to have a corresponding '.done' file (controlled by -ext) 
 Mode 'done directory': wait for a directory to be renamed '.done' (controlled by -ext)
""" % __version__
DEFAULTS={
          }

def main():
    try:
        import jlddk.do_setup  #@UnusedImport
        import logging
        import jlddk.do_checks #@UnusedImport
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)
        
        parser.add_argument('-ext', dest='ext_done',  type=str, help="Extension of 'done' files", default="done")        
        parser.add_argument('-p',   dest='polling',   type=int, help="Polling interval (seconds)", default=30 )
        
        parser.add_argument('-ds',  dest='dir_src',  type=str, help="Source directory",      required=True)
        parser.add_argument('-dd',  dest='dir_dst',  type=str, help="Destination directory", required=True)
        parser.add_argument('-dt',  dest='dir_tmp',  type=str, help="Temporary directory",   default=None)
        
        parser.add_argument('-ddd', dest='del_dir_dst',  action="store_true", help="Delete destination directory (if exists)", default=False)
        parser.add_argument('-md',  dest='mode_dir',     action="store_true", help="Mode 'directory' (default is 'file')", default=False)
                        
        from jlddk.script_bolus import run
        from jlddk.tools_sys import process_command_line
        args=process_command_line(parser)
        run(**args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
