#!/usr/bin/env python
"""
    jldcat - 'cat' command with "filename\tcontents" output on stdin

    @author: Jean-Lou Dupont
"""
__version__="0.2"
import os, sys, argparse
op=os.path

try:
    import jlddk #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk #@UnusedImport

########################################################################

DESC="""'cat' command with 'filename\tcontents' output on stdin - v%s""" % __version__

def main():
    try:
        import jlddk.do_setup #@UnusedImport
        import logging
        import jlddk.do_checks #@UnusedImport
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)

        parser.add_argument('-sp',   dest='path_source',  type=str, help="Source path", required=True)
        parser.add_argument('-cd',   dest='check_done',   action="store_true", help="Check '.done' file")
        parser.add_argument('-dp',   dest='path_done',    type=str, help="Path for 'done' files")
        
        parser.add_argument('-gd',   dest='gen_done',     action="store_true", help="Generate '.done' file")
        parser.add_argument('-if',   dest='ignore_fault', action="store_true", help="Ignore fault")
        parser.add_argument('-v',    dest='verbose',      action="store_true", help="Verbose mode")
        parser.add_argument('-rext', dest='rm_ext',       action="store_true", help="Remove extension from output filename")
        
        from jlddk.script_cat import run
        from jlddk.tools_sys import process_command_line
        args=process_command_line(parser)
        run(**args)


    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
