#!/usr/bin/env python
"""
    jlddebouncer

    @author: Jean-Lou Dupont
"""
__version__="0.1"
import os, sys, argparse
op=os.path

try:
    import jlddk
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk

########################################################################

DESC="Debounces changes in {key:value} pairs (JSON output) - v%3" % __version__
DEFAULTS={
          "hin": 3
          ,"timeout": 30
          ,"polling_interval": 30
          }

def main():
    try:
        import jlddk.do_setup
        import logging
        import jlddk.do_checks
        from jlddk.tools_logging import setloglevel
        from jlddk.tools_sys import info_dump, dnorm
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@')
        parser.add_argument('-key',   dest='key',    type=str, help="Key field name", required=True)
        parser.add_argument('-value', dest='value',  type=str, help="Value field name", required=True)        
        parser.add_argument('-itp',   dest='itopic',  type=str, help="Input topic of JSON message", required=True)
        parser.add_argument('-otp',   dest='otopic',  type=str, help="Output topic of JSON message", required=True)
        
        parser.add_argument('-ukv',   dest='use_kv', action="store_true", help="Use the input message's key & value field names", default=False)
        parser.add_argument('-hin',   dest='hin',    type=int, help="Input hysteresis (cycle)", default=DEFAULTS["hin"])
        
        parser.add_argument('-p',   dest="polling_interval", type=int,  help="Polling interval", default=DEFAULTS["polling_interval"])
        parser.add_argument('-to',  dest="timeout",          type=int,  help="{key:value} stale timeout (cycle)", default=DEFAULTS["timeout"])
        
        parser.add_argument('-ll',  dest="loglevel",  type=str,  help="Logging Level", choices=["debug", "info", "warning", "error"], default="info")        
                
        args=dnorm(vars(parser.parse_args()))
        
        info_dump(args, 20)
        setloglevel(args["loglevel"])
        
        from jlddk.script_debouncer import run
        run(args, **args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
