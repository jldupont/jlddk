#!/usr/bin/env python
"""
    Outputs a string at regular interval on stdout

    @author: Jean-Lou Dupont
"""
__version__="0.2"
import os, sys, argparse
op=os.path

try:
    import jlddk #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk #@UnusedImport

########################################################################

DESC="""Outputs a string at regular interval on stdout - v%s""" % __version__
DEFAULTS={
          "polling_interval": 30
          }

def main():
    try:
        import jlddk.do_setup  #@UnusedImport
        import logging
        import jlddk.do_checks #@UnusedImport
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)

        parser.add_argument('-ostr', dest='ostr', type=str, help="String to output", required=True)
        
        parser.add_argument('-p',    dest='polling_interval',  type=int, help="Polling interval (seconds)", default=DEFAULTS["polling_interval"])

        from jlddk.script_ostr import run
        from jlddk.tools_sys import process_command_line
        args=process_command_line(parser)
        run(**args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error("! %s" % str(e))
        sys.exit(1)
        
sys.exit(main())
