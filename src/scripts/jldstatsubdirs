#!/usr/bin/env python
"""
    jldstatdirs

    @author: Jean-Lou Dupont
"""
import os, sys, argparse
op=os.path

try:
    import jlddk
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk

########################################################################

DESC="Periodic status information on sub-dirs of a path (JSON output)"
DEFAULTS={
          "polling_interval": 30
          }

def main():
    try:
        import jlddk.do_setup
        import logging
        import jlddk.do_checks
        from jlddk.tools_logging import setloglevel
        from jlddk.tools_sys import info_dump, dnorm
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@')
        parser.add_argument('-sp',  dest='path',   type=str, help="Source path", required=True)
        parser.add_argument('-a',   dest='always', action="store_true", help="Always send update (even if no change)", default=False)
        
        parser.add_argument('-tp',  dest='topic',  type=str, help="Topic of output JSON message", required=True)
        parser.add_argument('-p',   dest="polling_interval", type=int,  help="Polling interval", default=DEFAULTS["polling_interval"])
        
        parser.add_argument('-ll',  dest="loglevel",  type=str,  help="Logging Level", choices=["debug", "info", "warning", "error"], default="info")        
                
        args=vars(parser.parse_args())
        
        info_dump(args, 20)
        setloglevel(args["loglevel"])
        
        from jlddk.script_statsubdirs import run
        run(**dnorm(args))

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
