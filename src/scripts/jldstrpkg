#!/usr/bin/env python
"""
    Stdin string packager

    @author: Jean-Lou Dupont
"""
__version__="0.1"
import os, sys, argparse
op=os.path

try:
    import jlddk #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk

########################################################################

DESC="""Stdin string packager - v%s

Takes input line of stdin as string and replaces each positional argument marked with %%s 
""" % __version__
DEFAULTS={
          "polling_interval": 30
          }

def main():
    try:
        import jlddk.do_setup  #@UnusedImport
        import logging
        import jlddk.do_checks #@UnusedImport
        
        from jlddk.tools_sys import info_dump, dnorm
        from jlddk.tools_logging import setloglevel, enable_duplicates_filter
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)

        parser.add_argument(        dest='iformat',       type=str,            help="Format line")
        parser.add_argument('-sep', dest='separator',     type=str,            help="Parameter separator on stdin", default=" ")
        parser.add_argument('-ll',  dest='log_level',     type=str,            help="Log Level", default="info", choices=["debug", "info", "warning", "error"])
        parser.add_argument('-ldf', dest='log_dupfilter', action="store_true", help="Filter out duplicate log entries", default=False)
        
        args=dnorm(vars(parser.parse_args()))
        
        if (args["log_dupfilter"]):
            enable_duplicates_filter()
            
        setloglevel(args["log_level"])
        info_dump(args, 20)

        from jlddk.script_strpkg import run
        
        run(**args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error("! %s" % str(e))
        sys.exit(1)
        
sys.exit(main())
