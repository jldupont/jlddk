#!/usr/bin/env python
"""
    jldtaskctl - Task Controller

    @author: Jean-Lou Dupont
"""
__version__="0.2"
import os, sys, argparse
op=os.path

try:
    import jlddk #@UnusedImport
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jlddk #@UnusedImport

########################################################################

DESC="""Task Controller - v%s""" % __version__
DEFAULTS={
          "polling_interval": 30
          ,"max_backoff":     60
          ,"min_backoff":     2
          
          ,"max_timeout_worker":    3*60
          ,"max_timeout_error":     5*30
          ,"max_pending":           2*60
          ,"wait":                  5
          ,"timeout_state_report":  30
          
          ,"clock_topic":    "tick"
          }

def main():
    try:
        import jlddk.do_setup  #@UnusedImport
        import logging
        import jlddk.do_checks #@UnusedImport
                
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@', formatter_class=argparse.RawTextHelpFormatter)
        parser.add_argument('-tt',    dest='task_types',   nargs="+", type=str, help="Task types to handle", required=True)
        
        parser.add_argument('-tpc',   dest='clock_topic',  type=str, help="1 second clock topic-name", default=DEFAULTS["clock_topic"])
        
        parser.add_argument('-maxte', dest="max_timeout_error",  type=int, help="Maximum timeout upon error (seconds)", default=DEFAULTS["max_timeout_error"])
        parser.add_argument('-maxpe', dest="max_pending",        type=int, help="Maximum pending timeout for task (seconds)", default=DEFAULTS["max_pending"])
        parser.add_argument('-wait',  dest="wait",               type=int, help="Wait time between tasks (seconds)", default=DEFAULTS["wait"])
        parser.add_argument('-tors',  dest="timeout_state_report", type=int, help="Time-out for reporting state, 0 to disable (seconds)", default=DEFAULTS["timeout_state_report"])
        
        parser.add_argument('-maxwt', dest="max_timeout_worker", type=int, help="Maximum pending timeout for task (seconds)", default=DEFAULTS["max_pending"])
        
        from jlddk.script_taskctl import run
        from jlddk.tools_sys import process_command_line
        args=process_command_line(parser)
        run(**args)

    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        
sys.exit(main())
